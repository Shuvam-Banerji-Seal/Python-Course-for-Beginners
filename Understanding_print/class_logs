(.venv) ╭─shuvam@masterr ~/codes/Python-Course-for-Beginners ‹main●› 
╰─$ python                     
Python 3.13.2 (main, Feb  5 2025, 08:05:21) [GCC 14.2.1 20250128] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> print("What is the full form of GCC?")
What is the full form of GCC?
>>> print("GCC-> GNU C Compiler")
GCC-> GNU C Compiler
>>> print("GNU-> GNU is NOT UNIX")
GNU-> GNU is NOT UNIX
>>> print("GNU-> GNU is NOT UNIX is NOT UNIX")
GNU-> GNU is NOT UNIX is NOT UNIX
>>> print()

>>> import nltk
Traceback (most recent call last):
  File "<python-input-5>", line 1, in <module>
    import nltk
ModuleNotFoundError: No module named 'nltk'
>>> nltk.download('punkt')
KeyboardInterrupt
>>> quit()
(.venv) ╭─shuvam@masterr ~/codes/Python-Course-for-Beginners ‹main●› 
╰─$ 
>>> print("What is a string?")
What is a string?
>>> print('What is a string?')
What is a string?
>>> r = "I am a boy"
>>> y = 'I am a boy'
>>> type(r)
<class 'str'>
>>> type(y)
<class 'str'>
>>> print('What is a string?')
What is a string?
>>> r = "I am a boy"
>>> y = 'I am a boy'
>>> type(r)
<class 'str'>
>>> type(y)
<class 'str'>
>>> a =2
>>> b= 2.0
>>> type(a)
<class 'int'>
>>> type(b)
<class 'float'>
>>> b= 2.00000000000000000000000000000000000000000000001123
>>> type(b)
<class 'float'>
>>> double g=2.5
  File "<python-input-14>", line 1
    double g=2.5
           ^
SyntaxError: invalid syntax
>>> double g
  File "<python-input-15>", line 1
    double g
           ^
SyntaxError: invalid syntax
>>> name = Duytika
Traceback (most recent call last):
  File "<python-input-16>", line 1, in <module>
    name = Duytika
           ^^^^^^^
NameError: name 'Duytika' is not defined
>>> name = 'Duytika'
>>> name
'Duytika'
>>> type(name)
<class 'str'>
>>> name[0]
'D'
>>> type(name[0])
<class 'str'>
>>> c='c'
>>> type(c)
<class 'str'>
>>> sys.getsizeof(c)
Traceback (most recent call last):
  File "<python-input-24>", line 1, in <module>
    sys.getsizeof(c)
    ^^^
NameError: name 'sys' is not defined. Did you forget to import 'sys'?
>>> import sys
>>> sys.getsizeof(c)
42
>>> sys.getsizeof(name)
48
>>> m= ''
>>> type(m)
<class 'str'>
>>> sys.getsizeof(m)
41

NameError: name 'sys' is not defined. Did you forget to import 'sys'?
>>> import sys
>>> sys.getsizeof(c)
42
>>> sys.getsizeof(name)
48
>>> m= ''
>>> type(m)
<class 'str'>
>>> sys.getsizeof(m)
41
>>> message = 'Please wait while the program is loading..' print(message)
  File "<python-input-31>", line 1
    message = 'Please wait while the program is loading..' print(message)
                                                           ^^^^^
SyntaxError: invalid syntax
>>> message = 'Please wait while the program is loading..' 
>>> print(message)
Please wait while the program is loading..
>>> import os
>>> print('Hello, ' + os.getlogin() + '! How are you?')
Hello, shuvam! How are you?
>>> print(f'Hello, {os.getlogin()}! How are you?')
Hello, shuvam! How are you?
>>> print(f'The value of a is {a}')
The value of a is 2
>>> print(f'The value of a is {a**2}')
The value of a is 4
>>> print(f'The value of a is {a**20}')
The value of a is 1048576
>>> print(f'The value of a is {a**200}')
The value of a is 1606938044258990275541962092341162602522202993782792835301376
>>> str_a= '42'
>>> print(f'the value of a is {a} \n The value of str_a is {str_a}')
the value of a is 2 
 The value of str_a is 42
>>> c = a+b
>>> print(c)
4.0
>>> a= 2
>>> b=3
>>> c = a+b
>>> print(c)
5
>>> c = str_a + b
Traceback (most recent call last):
  File "<python-input-49>", line 1, in <module>
    c = str_a + b
        ~~~~~~^~~
TypeError: can only concatenate str (not "int") to str
>>> d =str_a + b
Traceback (most recent call last):
  File "<python-input-50>", line 1, in <module>
    d =str_a + b
       ~~~~~~^~~
TypeError: can only concatenate str (not "int") to str
>>> str_b = '21'
>>> d = str_a + str_b
>>> print(d)
4221



>>> print(42)                            # <class 'int'>
42
>>> print(3.14)                          # <class 'float'>
3.14
>>> print(1 + 2j)                        # <class 'complex'>
(1+2j)
>>> print(True)                          # <class 'bool'>
True
>>> print([1, 2, 3])                     # <class 'list'>
[1, 2, 3]
>>> print((1, 2, 3))                     # <class 'tuple'>
(1, 2, 3)
>>> print({'red', 'green', 'blue'})      # <class 'set'>
{'red', 'green', 'blue'}
>>> print({'name': 'Alice', 'age': 42})  # <class 'dict'>
{'name': 'Alice', 'age': 42}
>>> print('hello')                       # <class 'str'>
hello
// In python there is negligible difference between single and double quotes. But as it uses Cpython the way the memory is handled is different.
>>> print('hello', 'world', sep=None)
hello world
>>> print('hello', 'world', sep='\n')
hello
world
>>> print('hello', 'world', sep='\t')
hello   world
>>> print('hello', 'world', sep='\r')
world
>>> print('hello', 'world', sep='\b')
hellworld
>>> print("I am going\r to school")
 to school
>>> print("I am going\b to school")
I am goin to school
>>> print('hello', 'world', sep='Duytika')
helloDuytikaworld
>>> print('hello', 'world', sep=' Duytika ')
hello Duytika world

//Remember that I have skipped the part of writing to a file
// That part will be done later



// For conversion between latex and markdown
(.venv) ╭─shuvam@masterr ~/codes/Python-Course-for-Beginners/DBMS ‹main●› 
╰─$ pandoc -s dbms.tex -o dbms.md

// \t -> pressing the TAB key on your keyboard
TAB == 4 spaces     



///Temporary stuff
I am a good girl. \n <-- Newline Character
I study in BDMI.


Dec  Char                           Dec  Char     Dec  Char     Dec  Char
---------                           ---------     ---------     ----------
  0  NUL (null)                      32  SPACE     64  @         96  `
  1  SOH (start of heading)          33  !         65  A         97  a
  2  STX (start of text)             34  "         66  B         98  b
  3  ETX (end of text)               35  #         67  C         99  c
  4  EOT (end of transmission)       36  $         68  D        100  d
  5  ENQ (enquiry)                   37  %         69  E        101  e
  6  ACK (acknowledge)               38  &         70  F        102  f
  7  BEL (bell)                      39  '         71  G        103  g
  8  BS  (backspace)                 40  (         72  H        104  h
  9  TAB (horizontal tab)            41  )         73  I        105  i
 10  LF  (NL line feed, new line)    42  *         74  J        106  j
 11  VT  (vertical tab)              43  +         75  K        107  k
 12  FF  (NP form feed, new page)    44  ,         76  L        108  l
 13  CR  (carriage return)           45  -         77  M        109  m
 14  SO  (shift out)                 46  .         78  N        110  n
 15  SI  (shift in)                  47  /         79  O        111  o
 16  DLE (data link escape)          48  0         80  P        112  p
 17  DC1 (device control 1)          49  1         81  Q        113  q
 18  DC2 (device control 2)          50  2         82  R        114  r
 19  DC3 (device control 3)          51  3         83  S        115  s
 20  DC4 (device control 4)          52  4         84  T        116  t
 21  NAK (negative acknowledge)      53  5         85  U        117  u
 22  SYN (synchronous idle)          54  6         86  V        118  v
 23  ETB (end of trans. block)       55  7         87  W        119  w
 24  CAN (cancel)                    56  8         88  X        120  x
 25  EM  (end of medium)             57  9         89  Y        121  y
 26  SUB (substitute)                58  :         90  Z        122  z
 27  ESC (escape)                    59  ;         91  [        123  {
 28  FS  (file separator)            60  <         92  \        124  |
 29  GS  (group separator)           61  =         93  ]        125  }
 30  RS  (record separator)          62  >         94  ^        126  ~
 31  US  (unit separator)            63  ?         95  _        127  DEL
